name: "Perform Release on Checkbox Tick"

on:
  issue_comment:
    types: edited
  workflow_call:
    secrets:
      access-token:
        description: "A custom token"
        required: false

jobs:
  listen-for-release-comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: contains('github-actions[bot]', github.event.comment.user.login)
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            const checkboxPattern = /(- \[x\] \*\*Check this box to perform the release\.\*\*)/;

            // Ensure the comment contains a checked box
            if (!checkboxPattern.test(comment)) {
              throw new Error("Checkbox for release not ticked. Aborting!");
            }

            console.log("Checkbox ticked, proceeding with release...");

  perform-release:
    name: Perform simulated release
    runs-on: ubuntu-latest
    needs: listen-for-release-comment
    steps:
      - name: Simulate failure
        run: exit 0

  test-outcome-update:
    name: Test outcome comment update
    runs-on: ubuntu-latest
    needs: perform-release
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Update comment based on result
        uses: actions/github-script@v7
        with:
          script: |
            const isSuccess = "${{ needs.perform-release.result }}" == "success";

            // Determine the message based on the outcome
            const updatedComment = isSuccess
              ? `üéâ **Hooray!** The release has been successfully deployed! üöÄ\n\nThank you for your contribution! If you need anything else, feel free to ask.`
              : `‚ùå **Oops!** The release could not be completed. Please check the logs for details.\n\n- [ ] **Check this box to perform the release.**`; // Include an unticked checkbox on failure

            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              body: updatedComment
            });
